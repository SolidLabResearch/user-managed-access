@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix : <http://example.org/> .
@prefix acl: <http://www.w3.org/ns/auth/acl#>.
@prefix fno:  <https://w3id.org/function/ontology#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix time: <http://www.w3.org/2000/10/swap/time#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .

# ...
{ :currentTime :is ?currentTime } <= { "" time:localTime ?currentTime }.

# Read ODRL rule
{ 
  	?permission a odrl:Permission;
      	odrl:action ?action ;
      	odrl:target ?targetResource ;
      	# odrl:assigner ?resourceOwner ;
      	odrl:assignee ?requestedParty.
		
		?action list:in (odrl:use odrl:read) . # multiple options

    # context of a request
  	?context 
        # :resourceOwner ?resourceOwner;
      	:requestingParty ?requestedParty;
      	:target ?targetResource;
      	:requestPermission <urn:example:css:modes:read>;
				<http://www.w3.org/ns/odrl/2/purpose> ?purposeValue.

    :uuid5 log:uuid ?uuidStringdataUsagePolicyExecution.
    ( "urn:uuid:" ?uuidStringdataUsagePolicyExecution) string:concatenation ?urnUuidStringdataUsagePolicyExecution.
    ?dataUsagePolicyExecution log:uri ?urnUuidStringdataUsagePolicyExecution .

		# Constraint checking
		
		# number of constraints must be two (temporal needs lower and upper bound)
		(?template {?permission odrl:constraint _:s} ?L) log:collectAllIn ?SCOPE.
		?L list:length 3 .
		
		:currentTime :is ?currentTime .

		# lower bound
		?permission odrl:constraint ?lowerBoundIRI .
		?lowerBoundIRI 
				odrl:leftOperand odrl:dateTime ;
				odrl:operator odrl:gt ;
				odrl:rightOperand ?lowerBound .

		# greater bound
		?permission odrl:constraint ?upperBoundIRI .
		?upperBoundIRI
				odrl:leftOperand odrl:dateTime ;
				odrl:operator odrl:lt ;
				odrl:rightOperand ?upperBound .

		# ?lowerBound < ?currentTime < ?upperBound
		?currentTime math:greaterThan ?lowerBound . 
		?currentTime math:lessThan ?upperBound .	

		# purpose constraint
		?permission odrl:constraint ?purposeConstraint .
		?purposeConstraint
				odrl:leftOperand odrl:purpose ;
				odrl:operator odrl:eq ;
				odrl:rightOperand ?purposeValue .
		# Note: nothing is done with the purpose right now TODO: needs checking
} =>
{
    ?dataUsagePolicyExecution a fno:Execution;
        fno:executes <http://example.org/dataUsage> ; 
        :accessModesAllowed <urn:example:css:modes:read> ; 
				<http://purl.org/dc/terms/issued> ?currentTime . 
  	
}.

# No ODRL rules for other access modes (`odrl:write` and `odrl:append` are deprecated)
