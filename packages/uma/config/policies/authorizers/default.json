{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@solidlab/uma/^0.0.0/components/context.jsonld",
    "https://linkedsoftwaredependencies.org/bundles/npm/@solidlab/ucp/^0.0.0/components/context.jsonld"
  ],
  "@graph": [
    {
      "@id": "urn:uma:default:Authorizer",
      "@type": "NamespacedAuthorizer",
      "authorizers": [
        {
          "NamespacedAuthorizer:_authorizers_key": "profile",
          "NamespacedAuthorizer:_authorizers_value": {
            "@id": "urn:uma:default:AllAuthorizer",
            "@type": "AllAuthorizer"
          }
        },
        {
          "NamespacedAuthorizer:_authorizers_key": "public",
          "NamespacedAuthorizer:_authorizers_value": {
            "@id": "urn:uma:default:AllAuthorizer"
          }
        },
        {
          "NamespacedAuthorizer:_authorizers_key": "credentials",
          "NamespacedAuthorizer:_authorizers_value": {
            "@id": "urn:uma:default:WebIdAuthorizer",
            "@type": "WebIdAuthorizer",
            "webids": [
              "https://pod.rubendedecker.be/profile/card#me"
            ]
          }
        },
        {
          "NamespacedAuthorizer:_authorizers_key": "settings",
          "NamespacedAuthorizer:_authorizers_value": {
            "@id": "urn:uma:default:WebIdAuthorizer",
            "@type": "WebIdAuthorizer",
            "webids": [
              "https://pod.rubendedecker.be/profile/card#me"
            ]
          }
        }
      ],
      "fallback": {
        "@id": "urn:uma:default:PolicyBasedAuthorizer",
        "@type": "PolicyBasedAuthorizer",
        "rulesDir": {
          "@id": "urn:uma:variables:rulesDir"
        },
        "policies": {
          "@id": "urn:uma:default:RulesStorage",
          "@type": "DirectoryUCRulesStorage",
          "directoryPath": {
            "@id": "urn:uma:variables:policyDir"
          }
        }
      }
    }
  ]
}
