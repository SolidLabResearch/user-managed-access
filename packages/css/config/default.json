{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@solid/community-server/^7.0.0/components/context.jsonld",
    "https://linkedsoftwaredependencies.org/bundles/npm/@solidlab/uma-css/^0.0.0/components/context.jsonld"
  ],
  "import": [
    "css:config/app/init/initialize-intro.json",
    "css:config/app/main/default.json",
    "css:config/app/variables/default.json",
    "css:config/http/handler/default.json",
    "css:config/http/middleware/default.json",
    "css:config/http/notifications/all.json",
    "css:config/http/server-factory/http.json",
    "css:config/http/static/default.json",
    "css:config/identity/access/public.json",
    "css:config/identity/email/default.json",
    "css:config/identity/handler/default.json",
    "css:config/identity/oidc/default.json",
    "css:config/identity/ownership/token.json",
    "css:config/identity/pod/static.json",
    "css:config/ldp/authentication/dpop-bearer.json",
    "uma-css:config/ldp/authorization/uma.json",
    "css:config/ldp/handler/default.json",
    "css:config/ldp/metadata-parser/default.json",
    "css:config/ldp/metadata-writer/default.json",
    "css:config/ldp/modes/default.json",
    "css:config/storage/backend/memory.json",
    "css:config/storage/key-value/resource-store.json",
    "css:config/storage/location/pod.json",
    "css:config/storage/middleware/default.json",
    "css:config/util/auxiliary/acl.json",
    "css:config/util/identifiers/suffix.json",
    "css:config/util/index/default.json",
    "css:config/util/logging/winston.json",
    "css:config/util/representation-conversion/default.json",
    "css:config/util/resource-locker/memory.json",
    "css:config/util/variables/default.json",

    "uma-css:config/uma/default.json"
  ],
  "@graph": [
    {
      "comment": "A single-pod server that trusts a pre-configured UMA AS."
    },
    {
      "comment": "Replace the account seeder with the UMA version so the AS is taken into account.",
      "@id": "urn:solid-server:override:SeededAccountInitializer",
      "@type": "Override",
      "overrideInstance": {
        "@id": "urn:solid-server:default:SeededAccountInitializer"
      },
      "overrideParameters": {
        "comment": "Initializer that instantiates all the seeded accounts and pods.",
        "@type": "UmaSeededAccountInitializer",
        "accountStore": { "@id": "urn:solid-server:default:AccountStore" },
        "passwordStore": { "@id": "urn:solid-server:default:PasswordStore" },
        "podCreator": { "@id": "urn:solid-server:default:PodCreator" },
        "configFilePath": { "@id": "urn:solid-server:default:variable:seedConfig" }
      }
    },
    {
      "comment": "Add JWKS handler to list of base handlers so the server exposes its public key.",
      "@id": "urn:solid-server:override:BaseHttpHandler",
      "@type": "Override",
      "overrideInstance": { "@id": "urn:solid-server:default:BaseHttpHandler" },
      "overrideSteps": [{
        "@type": "OverrideListInsertAt",
        "overrideParameter": { "@id": "WaterfallHandler:_handlers" },
        "overrideTarget": 0,
        "overrideValue": {
          "@id": "urn:solid-server:default:JwksHandler",
          "@type": "JwksHandler",
          "path": "/.well-known/jwks.json",
          "generator": {
            "@id": "urn:solid-server:default:JwkGenerator"
          }
        }
      }]
    },
    {
      "comment": "Replace the account store with the UMA version that stores AS settings.",
      "@id": "urn:solid-server:override:AccountStore",
      "@type": "Override",
      "overrideInstance": {
        "@id": "urn:solid-server:default:AccountStore"
      },
      "overrideParameters": {
        "@type": "UmaAccountStore",
        "storage": {
          "@id": "urn:solid-server:default:AccountStorage"
        }
      }
    },
    {
      "comment": "Replace the DPoP authentication with UMA authentication.",
      "@id": "urn:solid-server:override:AccessTokenExtractor",
      "@type": "Override",
      "overrideInstance": {
        "@id": "urn:solid-server:default:AccessTokenExtractor"
      },
      "overrideParameters": {
        "comment": "Extracts information from UMA access tokens.",
        "@type": "UmaTokenExtractor",
        "client": { "@id": "urn:solid-server:default:UmaClient" },
        "targetExtractor": { "@id": "urn:solid-server:default:TargetExtractor" },
        "ownerUtil": { "@id": "urn:solid-server:default:OwnerUtil" },
        "introspect": false
      }
    },
    {
      "comment": "Replace the authorization handler with UMA support.",
      "@id": "urn:solid-server:override:LdpHandler",
      "@type": "Override",
      "overrideInstance": {
        "@id": "urn:solid-server:default:LdpHandler"
      },
      "overrideParameters": {
        "@type": "ParsingHttpHandler",
        "operationHandler": {
          "@type": "AuthorizingHttpHandler",
          "credentialsExtractor": { "@id": "urn:solid-server:default:CredentialsExtractor" },
          "modesExtractor": { "@id": "urn:solid-server:default:ModesExtractor" },
          "permissionReader": { "@id": "urn:solid-server:default:PermissionReader" },
          "authorizer": {
            "comment": "Requests UMA ticket when authorization fails.",
            "@id": "urn:solid-server:default:UmaAuthorizer",
            "@type": "UmaAuthorizer",
            "authorizer": { "@id": "urn:solid-server:default:Authorizer" },
            "umaClient": { "@id": "urn:solid-server:default:UmaClient" },
            "ownerUtil": { "@id": "urn:solid-server:default:OwnerUtil" }
          },
          "operationHandler": { "@id": "urn:solid-server:default:OperationHandler" }
        }
      }
    },
    {
      "comment": "Replace WWW-Authenticate metadata writer with the UMA version.",
      "@id": "urn:solid-server:override:MetadataWriter_WwwAuth",
      "@type": "Override",
      "overrideInstance": {
        "@id": "urn:solid-server:default:MetadataWriter_WwwAuth"
      },
      "overrideParameters": {
        "comment": "Returns the UMA ticket in case of an unauthorized request.",
        "@id": "urn:solid-server:default:MetadataWriter_UmaTicket",
        "@type": "UmaTicketMetadataWriter"
      }
    }
  ]
}
